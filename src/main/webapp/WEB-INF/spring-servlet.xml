<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
<default-servlet-handler />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

<!-- For tiles -->
<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">  
<beans:property name="viewClass">  
    <beans:value>org.springframework.web.servlet.view.tiles3.TilesView</beans:value>  
</beans:property>
</beans:bean>
<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
<beans:property name="definitions">
<beans:list>
<beans:value>/WEB-INF/tiles/layouts.xml</beans:value>
<beans:value>/WEB-INF/tiles/views.xml</beans:value>
</beans:list>
</beans:property>
</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	 <beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/annotations" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.SampleServlet1.model.EmployeeVO</beans:value>
				<beans:value>com.SampleServlet1.model.EmployeeVO_Login</beans:value>
				<beans:value>com.SampleServlet1.model.EmployeeVO2</beans:value>
				<beans:value>com.SampleServlet1.model.EmployeeVO_Login2</beans:value>
				<beans:value>com.SampleServlet1.model.Person</beans:value>
				<beans:value>com.SampleServlet1.model.Employee</beans:value>
				<beans:value>com.SampleServlet1.model.Department</beans:value>
				<beans:value>com.SampleServlet1.model.Wife</beans:value>
				<beans:value>com.SampleServlet1.model.Husband</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			 <beans:prop key="hibernate.cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</beans:prop>
			
			 <beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>
			 </beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="dao" class="com.SampleServlet1.dao.EmployeeDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="manager" class="com.SampleServlet1.service.EmployeeManagerImpl">
 		<beans:property name="dao" ref="dao" />
	</beans:bean>
	<beans:bean id="personDAO" class="com.SampleServlet1.dao.PersonDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="personService" class="com.SampleServlet1.service.PersonServiceImpl">
		<beans:property name="personDAO" ref="personDAO"></beans:property>
	</beans:bean>
	<context:component-scan base-package="com.SampleServlet1" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>


</beans:beans>
